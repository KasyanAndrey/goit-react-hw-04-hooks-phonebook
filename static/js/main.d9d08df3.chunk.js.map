{"version":3,"sources":["componets/ContactForm/ContactForm.jsx","componets/ContactList/ContactList.jsx","componets/Filter/Filter.jsx","App.js","hooks/useLocalStorage.js","index.js","componets/ContactForm/ContactForm.module.css","componets/ContactList/ContactList.module.css","componets/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","nameInputId","uuidv4","numberInputId","preventDefault","className","s","form","title","htmlFor","type","onChange","pattern","id","required","input","btn","ContactList","contacts","onDeletContacts","list","map","item","onClick","Filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizeFilter","toLocaleLowerCase","contact","includes","getVisibleContacts","find","alert","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d9d08df3.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSabmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit( name, number );\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSabmit} className={s.form}>\r\n      <p className={s.title}>Name</p>\r\n      <label htmlFor={nameInputId}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          id={nameInputId}\r\n          required\r\n          className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <p className={s.title}>Number</p>\r\n      <label htmlFor={numberInputId}>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          id={numberInputId}\r\n          required\r\n          className={s.input + ' ' + s.number}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeletContacts }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.item} key={id}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n        <button onClick={() => onDeletContacts(id)} className={s.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeletContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label htmlFor=\"\">\r\n    <p className={s.title}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.input} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './componets/ContactForm';\nimport ContactList from './componets/ContactList';\nimport Filter from './componets/Filter';\n\nimport useLocalStorage from './hooks/useLocalStorage';\n\nimport './index.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      setContacts(state => [...state, contact]);\n    }\n  };\n\n  const changeFilter = event => {\n    const { value } = event.currentTarget;\n\n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  const deletContacts = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeletContacts={deletContacts} />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__6Znuy\",\"input\":\"ContactForm_input__1owE_\",\"number\":\"ContactForm_number__3vq6x\",\"btn\":\"ContactForm_btn__2S-XD\",\"title\":\"ContactForm_title__1ksUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3dBJ4\",\"item\":\"ContactList_item__3roHe\",\"btn\":\"ContactList_btn__37mpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1V0B6\",\"input\":\"Filter_input__5yaT5\"};"],"sourceRoot":""}